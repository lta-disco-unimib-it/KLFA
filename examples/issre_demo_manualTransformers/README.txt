This example shows how KLFA can be used to identifies anomalies among sequences 
of events recorded in csv files. 
This example corresponds to the one shown at ISSRE 2008.

** Infer the models

Run the script named training to infer a model.
The script infers models with the component level granularity.



The script reads the file correct.cvs which contains the valid traces.
First column shows the component name, second column the event name. 
Other columns correspond to event parameters. 
This file presents events produced by a single component whose name is "0". 
A trace file usually contains events generated by many components. 
Furthermore component names are not forced to correspond to numbers, but they 
can be any string, e.g. Server or Jsp, etc.
This file presents event names like Event1, Event2 etc. An event names is a 
string without a predefined format, thus names like "start application" or 
shutdown are valid event names.

Preprocessors configuration has been defined in preprocessingRules.txt: this 
file presents regular expressions that match component-event pairs and permit 
to associate the event parameters to the different data clusters.

For example:

0,Event9,0:COMPONENT,1:EVENT,2:USER,3:IP

indicates that for the 'Event9' generated by component '0' KLFA must analyze 
parameters in this manner: 
	the 1st column corresponds to cluster COMPONENT
	the 2nd column corresponds to cluster EVENT
	the 3rd column corresponds to cluster USER
	the 4th column corresponds to cluster IP
	


A user could define the rule in this manner	

0,Event[5-9],0:COMPONENT,1:EVENT,2:USER,3:IP

that usees a regular expression to indicate that rule described before holds for
 events 5 to 9.
 
 
	
Transformers configuration has been manually defined in transformersConfig.txt: 
this file indicates the data transformation rules to apply to the different data 
clusters identified manually.

File content is the following:

IP,RA
SERVER_IP,RA
USER,RA
PORT,RA
COMPONENT,SAME
EVENT,SAME


This indicate that we have 6 data clusters. Two of them are not real data 
clusters, they identify component and events but we need to define them for 
technical reasons.

First  line indicates that data cluster IP must be transformed with the 
Relative to Access rule.


Last line indicates that cluster EVENT must be transformed with the rule SAME 
(that keeps data as it is).

** Inspect the models

You can inspect the inferred models once the inference terminates.
The csv file contains only a single component, named 0, thus a single component 
FSA is inferred.

run 
	klfaShowFSA.sh klfutput/0.ser 
in order to open the FSA

KLFA infers also a "GLOBAL" fsa that includes only the first event of a sequence 
of events belonging to a same component.


run 
	klfaShowFSA.sh klfutput/GLOBAL.ser 
in order to open the FSA


** Run the anomaly detection


By running the script named checking you can start the anomaly detection 
process.
After the execution ends you can both inspect the extended models and the 
anomalies detected.
Models are saved in folder klfaoutputs and can be inspected using klfaShoFSA.sh

Anomalies are saved in a csv file: klfaoutput/anomalies.csv


** Change some configurations/inputs to understand the tool functionalities:
	*)  add a line to correct.csv 
			for example you can add the following line, representing an event 
			of the bootstrap componen,t at the beginning of the file correct.csv
			
				BootStrap,boot
		
		repeat the whole process and see how many anomalies are detected now. 
		KLFA will indicate that an event for component BootStrap is missing

	*)change transformersConfig.txt
		this file indicates how to preprocess the data clusters:
		try the following data transformes 
			GO - Global Ordering
			RI - Relative to Instantiation
			
		you can assign different data transformation rules to different data 
		clusters
		
	*)change preprocessingRules.txt
		you can modify the regular expressions in this file to change the 
		parameters assigned to the different data clusters
		
		you can add a data cluster, but remember to add it also to 
		transformersConfig.txt
		
		you can modify Event6 and Event7 this way
		
		0,Event6,0:COMPONENT,1:EVENT,2:MODIFIEDUSER,3:IP	
		0,Event7,0:COMPONENT,1:EVENT,2:MODIFIEDUSER,3:IP
		
		and add the following line to transformersConfig.txt
		
		MODIFIEDUSER,RA	